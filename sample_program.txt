# -f(a:1, bcd:2) + (~ ! -0b10) * (3 + 4) / 5 > 6 % 7 + 8 * ((2<<10) * (1 >> 100))

''

"'

# 234
   
  ''
var global_var: Int 
func main(): Int {
	var i: Int
	var n: Int
	n = input()
	# global_var = 1
	# print(val: global_var)
	while (i < n) {
		print(val: calcFibonacci(n: i))
		i = i + 1
	}
	print(val: factorial(n: n))
}


func calcFibonacci(n: Int): Int {
	var last_value: Int
	var last_last_value: Int
	var i: Int
	var temp: Int
	# print(val: global_var)
	last_value = 1
	last_last_value = 0
	if (n < 0) {
		return -1
	} 
	else if (n == 0) {
		return 0
	}
	if (n == 1) {
		return 1
	}

	i = 1
	while (i < n) {
		temp = last_value + last_last_value
		last_last_value = last_value
		last_value = temp
		i = i + 1
	}
	return last_value

}


func factorial(n: Int): Int {
	if (n <= 0) {
		return 1
	}
	if (n == 1) {
		return 1
	}
	return n * factorial(n: n-1)
}
